import Head from "next/head";
import styles from "../styles/pages/Home/Home.module.scss";
import LayoutMain from "../components/Layout/layoutMain";
import { API, PAGE } from "../constants";
import Divider from "../components/divider/divider";
import Link from "next/dist/client/link";
import { Swiper, SwiperSlide } from "swiper/react";
import SwiperCore, { Navigation } from "swiper/core";
import CardProduct from "../components/cards/cardProduct";
import Spacer from "../components/Spacer/spacer";
import { getData, postData } from "../api/fetch";
import { useEffect, useState } from "react";
import slugify from "slugify";
import Swal from "sweetalert2";
import { addCart, addCartWithLogin } from "../utils/cartMethods";
import { useRecoilState, useRecoilValue } from "recoil";
import { cartChangeTrigger, isAuthed } from "../states/index.atom";

export default function Home() {
  const [pageLoading, setPageLoading] = useState(true);
  const [productsTopData, setProductsTopData] = useState([]);
  const [mostSellData, setProductsMostSellData] = useState([]);
  const isAuth = useRecoilValue(isAuthed);
  const [cartTrigger, setCartTrigger] = useRecoilState(cartChangeTrigger);
  SwiperCore.use([Navigation]);
  const SLIDES_PER_GROUP = 1;

  useEffect(() => {
    postData("/api/product/getProductsTop", { count: 20 })
      .then((res) => {
        const parsedData = res.data.products.map((item) => {
          item["photos"] = JSON.parse(item["photos"]);
          return item;
        });
        setProductsTopData(parsedData);
      })
      .catch((err) => {
        Swal.fire({
          icon: "error",
          title: "Hata!",
          text: "Lütfen sayfayı yenileyiniz. Eğer tekrar bu hatayı alırsanız bu hatayı en kısa sürede düzelteceğiz.",
        });
      });
    getData("/api/product/getProductsMostSell/" + 20)
      .then((res) => {
        const parsedData = res.data.products.map((item) => {
          item["photos"] = JSON.parse(item["photos"]);
          return item;
        });
        setProductsMostSellData(parsedData);
        setPageLoading(false);
      })
      .catch((err) => {
        Swal.fire({
          icon: "error",
          title: "Hata!",
          text: "Lütfen sayfayı yenileyiniz. Eğer tekrar bu hatayı alırsanız bu hatayı en kısa sürede düzelteceğiz.",
        });
      });
  }, []);

  const TopSwiperItem = ({ src, title, href }) => {
    return (
      <Link href={`product/${href}`}>
        <a>
          <img className={styles.topSwiperImg} src={src} />
          <div className={styles.topSwiperTitle}>
            <h1>{title}</h1>
          </div>
        </a>
      </Link>
    );
  };
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <LayoutMain pageLoading={pageLoading}>
        {/* Top Swiper Begin */}
        <Swiper
          slidesPerView={1}
          className={styles.topSwiperContainer}
          navigation={true}
          loop={true}
        >
          {productsTopData.map((item, index) => {
            return (
              <SwiperSlide key={index}>
                <TopSwiperItem
                  title={item.title}
                  href={slugify(item.title) + "-" + item.id}
                  src={`${API.imgUrl}${item.photos[0]}`}
                />
              </SwiperSlide>
            );
          })}
        </Swiper>
        {/* Top Swiper End */}

        <Spacer top="25px" />

        {/* Çok Satanlar Begin */}
        <Divider direction="left">
          <Link href={PAGE.bestSelling.href}>
            <a>{PAGE.bestSelling.name}</a>
          </Link>
        </Divider>
        <Swiper
          spaceBetween={25}
          slidesPerView={5}
          className={styles.swiperContainer}
          navigation={true}
          slidesPerGroup={SLIDES_PER_GROUP}
          loop={true}
        >
          {mostSellData.map((item, index) => {
            return (
              <SwiperSlide key={index}>
                <CardProduct
                  title={item.title}
                  href={"product/" + slugify(item.title) + "-" + item.id}
                  price={item.price || 0}
                  imageUrl={`${API.imgUrl}${item.photos[0]}`}
                  onAddCart={() => {
                    setCartTrigger(!cartTrigger);
                    addCart(
                      { productId: item.id, count: 50, checked: true },
                      isAuth
                    );
                  }}
                />
              </SwiperSlide>
            );
          })}
        </Swiper>
        {/* Çok Satanlar End */}

        <Spacer top="50px" />

        {/* En Yeniler Begin */}
        <Divider direction="left">
          <Link href={PAGE.newests.href}>
            <a>{PAGE.newests.name}</a>
          </Link>
        </Divider>
        <Swiper
          spaceBetween={25}
          slidesPerView={5}
          className={styles.swiperContainer}
          navigation={true}
          loop={true}
          slidesPerGroup={SLIDES_PER_GROUP}
        >
          {productsTopData.map((item, index) => {
            return (
              <SwiperSlide key={index}>
                <CardProduct
                  title={item.title}
                  href={"product/" + slugify(item.title) + "-" + item.id}
                  price={item.price || 0}
                  imageUrl={`${API.imgUrl}${item.photos[0]}`}
                  onAddCart={() => {
                    setCartTrigger(!cartTrigger);
                    addCart(
                      { productId: item.id, count: 50, checked: true },
                      isAuth
                    );
                  }}
                />
              </SwiperSlide>
            );
          })}
        </Swiper>
        {/* En Yeniler End */}
      </LayoutMain>
    </div>
  );
}
