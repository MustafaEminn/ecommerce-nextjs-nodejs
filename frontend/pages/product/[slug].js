import LayoutMain from "../../components/Layout/layoutMain";
import Head from "next/dist/next-server/lib/head";
import styles from "../../styles/pages/product/product.module.scss";
import stylesM from "../../styles/pages/product/productM.module.scss";
import Card from "../../components/cards/card";
import { Swiper, SwiperSlide } from "swiper/react";
import SwiperCore, { Navigation, Thumbs } from "swiper/core";
import { useEffect, useState } from "react";
import LargeCounter from "../../components/counter/largeCounter";
import MainColorButton from "../../components/buttons/mainColorButton";
import ShoppingCartIcon from "../../public/icons/shoppingCart";
import { getData } from "../../api/fetch";
import Swal from "sweetalert2";
import { API, PAGE } from "../../constants";
import router from "next/router";
import { addCart } from "../../utils/cartMethods";
import { useRecoilState, useRecoilValue } from "recoil";
import { cartChangeTrigger, isAuthed, isMobile } from "../../states/index.atom";
import { calcPrice } from "../../utils/calcPrice";
import LayoutMainMobile from "../../components/Layout/layoutMainM";

function ProductPage() {
  SwiperCore.use([Navigation, Thumbs]);
  const [thumbsSwiper, setThumbsSwiper] = useState(null);
  const [count, setCount] = useState(50);
  const [product, setProduct] = useState({ photos: [] });
  const [pageLoading, setPageLoading] = useState(true);
  const isAuth = useRecoilValue(isAuthed);
  const isMobileDevice = useRecoilValue(isMobile);
  const [cartTrigger, setCartTrigger] = useRecoilState(cartChangeTrigger);

  useEffect(() => {
    const pathname = window.location.pathname;
    const path = pathname.split("-")[pathname.split("-").length - 1];
    getData("/api/product/getProductById/" + path)
      .then((res) => {
        if (res.data.product[0]) {
          var data = res.data.product[0];
          data["photos"] = JSON.parse(data["photos"]);
          console.log(data["photos"].length);
          setProduct(data);
          setPageLoading(false);
        } else {
          Swal.fire({
            icon: "error",
            title: "Hata!",
            text: "Ürün bulunamadı.",
          });
        }
      })
      .catch(() => {
        Swal.fire({
          icon: "error",
          title: "Hata!",
          text: "Lütfen sayfayı yenileyiniz. Eğer tekrar bu hatayı alırsanız bu hatayı en kısa sürede düzelteceğiz.",
          didClose: () => {
            router.push(PAGE.home.href);
          },
        });
      });
  }, []);

  const onAddCart = () => {
    const pathname = window.location.pathname;
    const path = pathname.split("-")[pathname.split("-").length - 1];
    setCartTrigger(!cartTrigger);
    addCart({ productId: path, count: count, checked: true }, isAuth);
  };
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {isMobileDevice ? (
        <LayoutMainMobile pageLoading={pageLoading}>
          <div className="productContainerForSwiper">
            <div className={stylesM.container}>
              <Swiper
                thumbs={{ swiper: thumbsSwiper }}
                spaceBetween={5}
                slidesPerView={1}
                className={stylesM.swiperContainer}
                navigation={true}
                loop={true}
                slidesPerGroup={1}
              >
                {product["photos"].map((item, index) => {
                  return (
                    <SwiperSlide key={index}>
                      <img
                        width="100%"
                        src={`${API.imgUrl}${item}`}
                        className={stylesM.swiperImg}
                      />
                    </SwiperSlide>
                  );
                })}
              </Swiper>

              <div className={stylesM.rightContainer}>
                <Card className={stylesM.productCard}>
                  <h1 className={stylesM.productHeader}>{product.title}</h1>
                  <h2 className={stylesM.productPrice}>
                    {calcPrice(product.price, count)} TL
                  </h2>
                  <div className={stylesM.counterContainer}>
                    <LargeCounter
                      value={count}
                      onChange={(newCount) => {
                        setCount(count + newCount);
                      }}
                    />
                  </div>
                  <div className={stylesM.cartButtonContainer}>
                    <MainColorButton
                      height="44px"
                      text="Sepete Ekle"
                      icon={<ShoppingCartIcon />}
                      onClick={onAddCart}
                    />
                  </div>
                </Card>
                <Card className={stylesM.productInfo}>
                  <h1 className={stylesM.productHeader}>Ürün Bilgileri</h1>
                  <div
                    className={stylesM.productDetails}
                    dangerouslySetInnerHTML={{ __html: product.details }}
                  ></div>
                </Card>
              </div>
            </div>
          </div>
        </LayoutMainMobile>
      ) : (
        <LayoutMain pageLoading={pageLoading}>
          <div className="productContainerForSwiper">
            <div className={styles.container}>
              <Card className={styles.productPhoto}>
                <Swiper
                  thumbs={{ swiper: thumbsSwiper }}
                  spaceBetween={25}
                  slidesPerView={1}
                  className={styles.swiperContainer}
                  navigation={true}
                  loop={true}
                  slidesPerGroup={1}
                >
                  {product["photos"].map((item, index) => {
                    return (
                      <SwiperSlide key={index}>
                        <img
                          width="100%"
                          src={`${API.imgUrl}${item}`}
                          className={styles.swiperImg}
                        />
                      </SwiperSlide>
                    );
                  })}
                </Swiper>
                <Swiper
                  onSwiper={setThumbsSwiper}
                  spaceBetween={10}
                  slidesPerView={4}
                  watchSlidesVisibility={true}
                  watchSlidesProgress={true}
                  className="mySwiper"
                >
                  {product["photos"].map((item, index) => {
                    return (
                      <SwiperSlide key={index}>
                        <img
                          src={`${API.imgUrl}${item}`}
                          className={styles.thumbImg}
                        />
                      </SwiperSlide>
                    );
                  })}
                </Swiper>
              </Card>
              <div className={styles.rightContainer}>
                <Card className={styles.productCard}>
                  <h1 className={styles.productHeader}>{product.title}</h1>
                  <h2 className={styles.productPrice}>
                    {calcPrice(product.price, count)} TL
                  </h2>
                  <div className={styles.counterContainer}>
                    <LargeCounter
                      value={count}
                      onChange={(newCount) => {
                        setCount(count + newCount);
                      }}
                    />
                  </div>
                  <div className={styles.cartButtonContainer}>
                    <MainColorButton
                      height="44px"
                      text="Sepete Ekle"
                      icon={<ShoppingCartIcon />}
                      onClick={onAddCart}
                    />
                  </div>
                </Card>
                <Card className={styles.productInfo}>
                  <h1 className={styles.productHeader}>Ürün Bilgileri</h1>
                  <div
                    className={styles.productDetails}
                    dangerouslySetInnerHTML={{ __html: product.details }}
                  ></div>
                </Card>
              </div>
            </div>
          </div>
        </LayoutMain>
      )}
    </div>
  );
}

export default ProductPage;
